.. _glossary:

Glossary
========

.. glossary::
   :sorted:

   renderer
     A callable with the signature ``(template_name, **kw)`` which is
     capable of rendering a template for use in a deform widget.

   cstruct
     Data serialized by :term:`Colander` to a representation suitable
     for consumption by a :mod:`deform` serializer.  Usually, when
     used in :mod:`deform`, a cstruct is composed entirely of lists,
     dictionaries, strings, and file objects.

   pstruct
     Data deserialized by :term:`Peppercorn` to a representation
     suitable for consumption by a :mod:`deform` deserializer.
     Usually, when used in :mod:`deform`, a cstruct is composed
     entirely of lists, dictionaries, strings, and file objects.

   appstruct
     A raw application data structure (complex Python objects).

   Colander
     A `schema package <http://docs.repoze.org/colander>`_ used by deform
     to provide serialization and validation facilities.

   Peppercorn
     A `package <http://docs.repoze.org/peppercorn>`_ used by deform
     for strutured form submission value deserialization.

   schema
     A schema can serialize an :term:`appstruct` to a :term:`cstruct`
     and deserialize a :term:`cstruct` to an :term:`appstruct` (object
     derived from :class:`colander.SchemaNode` or one of the colander
     Schema classes).  Schemas are offered by the :term:`Colander`
     package in :mod:`deform`.

   widget
     Serializes a :term:`cstruct` into a form rendering and
     deserializes a :term:`pstruct` into a :term:`cstruct`.

   form controls
     A sequence of form fields (as per the the `RFC 2388
     <http://www.servlets.com/rfcs/rfc2388.txt>`_ definition of
     "field").

   Chameleon
     `chameleon <http://chameleon.repoze.org>`_ is an attribute
     language template compiler which supports the ZPT (Zope Page
     Templates) templating specification.  It is written and
     maintained by Malthe Borch.

   field
     A node in the graph generated by :mod:`deform` that has access to
     a :term:`schema` node object and a :term:`widget` object.  The
     scope of a field object is generally limited to the scope of a
     single HTTP request, so field objects are often used to maintain
     state information during the request.

